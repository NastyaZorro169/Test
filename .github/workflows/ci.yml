name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Apply
        run: |
          cd terraform/envs/dev
          export TF_VAR_yc_token=$YC_KEY
          export TF_VAR_s3_key=$YC_S3_KEY
          export TF_VAR_s3_secret=$YC_S3_SECRET
          export TF_VAR_cloud_id=$YC_CLOUD_ID
          export TF_VAR_folder_id=$YC_FOLDER_ID
          terraform init
          terraform apply -auto-approve
        env:
          YC_KEY: ${{ secrets.YC_KEY }}
          YC_S3_KEY: ${{ secrets.YC_S3_KEY }}
          YC_S3_SECRET: ${{ secrets.YC_S3_SECRET }}
          YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
          YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}

  test-ml:
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Build & Start MLflow
        run: |
          cd deploy/mlflow
          docker-compose up -d --build
        env:
          YC_S3_KEY: ${{ secrets.YC_S3_KEY }}
          YC_S3_SECRET: ${{ secrets.YC_S3_SECRET }}
      - name: Wait for MLflow to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5001/; then
              echo "MLflow is up!"
              exit 0
            fi
            echo "Waiting for MLflow..."
            sleep 5
          done
          echo "MLflow did not start in time" >&2
          exit 1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run ML Training
        env:
          MLFLOW_TRACKING_URI: http://localhost:5001
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_SECRET }}
          DB_NAME: mlflow
          DB_USER: mlflow
          DB_PASSWORD: changeme
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          PYTHONPATH=$(pwd) python unidoc/ml/train.py